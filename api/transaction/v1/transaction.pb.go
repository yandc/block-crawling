// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.3
// source: api/transaction/v1/transaction.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DappPageListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName       string `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	Page            int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`   // 默认1
	Limit           int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"` //  默认20
	Fromuid         string `protobuf:"bytes,5,opt,name=fromuid,proto3" json:"fromuid,omitempty"`
	FromAddress     string `protobuf:"bytes,6,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	OrderBy         string `protobuf:"bytes,7,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	DataDirection   int32  `protobuf:"varint,8,opt,name=dataDirection,proto3" json:"dataDirection,omitempty"`
	StartIndex      int64  `protobuf:"varint,9,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
}

func (x *DappPageListReq) Reset() {
	*x = DappPageListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DappPageListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DappPageListReq) ProtoMessage() {}

func (x *DappPageListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DappPageListReq.ProtoReflect.Descriptor instead.
func (*DappPageListReq) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *DappPageListReq) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *DappPageListReq) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *DappPageListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DappPageListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DappPageListReq) GetFromuid() string {
	if x != nil {
		return x.Fromuid
	}
	return ""
}

func (x *DappPageListReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *DappPageListReq) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *DappPageListReq) GetDataDirection() int32 {
	if x != nil {
		return x.DataDirection
	}
	return 0
}

func (x *DappPageListReq) GetStartIndex() int64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

type DappPageListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok   bool          `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Data *DappPageData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DappPageListResp) Reset() {
	*x = DappPageListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DappPageListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DappPageListResp) ProtoMessage() {}

func (x *DappPageListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DappPageListResp.ProtoReflect.Descriptor instead.
func (*DappPageListResp) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *DappPageListResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DappPageListResp) GetData() *DappPageData {
	if x != nil {
		return x.Data
	}
	return nil
}

type DappPageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32                `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Total int64                `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Data  []*TransactionRecord `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DappPageData) Reset() {
	*x = DappPageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DappPageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DappPageData) ProtoMessage() {}

func (x *DappPageData) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DappPageData.ProtoReflect.Descriptor instead.
func (*DappPageData) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *DappPageData) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DappPageData) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DappPageData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DappPageData) GetData() []*TransactionRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

type NonceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName string `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *NonceReq) Reset() {
	*x = NonceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceReq) ProtoMessage() {}

func (x *NonceReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceReq.ProtoReflect.Descriptor instead.
func (*NonceReq) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *NonceReq) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *NonceReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type NonceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok    bool  `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Nonce int64 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *NonceResp) Reset() {
	*x = NonceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceResp) ProtoMessage() {}

func (x *NonceResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceResp.ProtoReflect.Descriptor instead.
func (*NonceResp) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *NonceResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *NonceResp) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type OpenAmountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                         //--非必输
	Currency        string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`               // -- 必输  法币标的物
	ChainName       string `protobuf:"bytes,3,opt,name=chainName,proto3" json:"chainName,omitempty"`             //  -- 非必输
	Address         string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`                 //-- 非必输
	ContractAddress string `protobuf:"bytes,5,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"` //  -- 非必输
}

func (x *OpenAmountReq) Reset() {
	*x = OpenAmountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAmountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAmountReq) ProtoMessage() {}

func (x *OpenAmountReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAmountReq.ProtoReflect.Descriptor instead.
func (*OpenAmountReq) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *OpenAmountReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *OpenAmountReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OpenAmountReq) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *OpenAmountReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OpenAmountReq) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type OpenAmoutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok   bool            `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Data *OpenAmountInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *OpenAmoutResp) Reset() {
	*x = OpenAmoutResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAmoutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAmoutResp) ProtoMessage() {}

func (x *OpenAmoutResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAmoutResp.ProtoReflect.Descriptor instead.
func (*OpenAmoutResp) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *OpenAmoutResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *OpenAmoutResp) GetData() *OpenAmountInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type OpenAmountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RiskExposureAmount string `protobuf:"bytes,1,opt,name=riskExposureAmount,proto3" json:"riskExposureAmount,omitempty"`
	DappCount          int64  `protobuf:"varint,2,opt,name=dappCount,proto3" json:"dappCount,omitempty"`
}

func (x *OpenAmountInfo) Reset() {
	*x = OpenAmountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenAmountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenAmountInfo) ProtoMessage() {}

func (x *OpenAmountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenAmountInfo.ProtoReflect.Descriptor instead.
func (*OpenAmountInfo) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *OpenAmountInfo) GetRiskExposureAmount() string {
	if x != nil {
		return x.RiskExposureAmount
	}
	return ""
}

func (x *OpenAmountInfo) GetDappCount() int64 {
	if x != nil {
		return x.DappCount
	}
	return 0
}

type DappListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid             string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                         //-- 必输
	ChainName       string   `protobuf:"bytes,2,opt,name=chainName,proto3" json:"chainName,omitempty"`             //-- 必输
	Addresses       []string `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses,omitempty"`             //-- 非必输
	ContractAddress string   `protobuf:"bytes,4,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"` // -- 非必输
	IsCancel        bool     `protobuf:"varint,5,opt,name=isCancel,proto3" json:"isCancel,omitempty"`
	IsCancelStatus  string   `protobuf:"bytes,6,opt,name=isCancelStatus,proto3" json:"isCancelStatus,omitempty"`
}

func (x *DappListReq) Reset() {
	*x = DappListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DappListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DappListReq) ProtoMessage() {}

func (x *DappListReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DappListReq.ProtoReflect.Descriptor instead.
func (*DappListReq) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *DappListReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DappListReq) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *DappListReq) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *DappListReq) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *DappListReq) GetIsCancel() bool {
	if x != nil {
		return x.IsCancel
	}
	return false
}

func (x *DappListReq) GetIsCancelStatus() string {
	if x != nil {
		return x.IsCancelStatus
	}
	return ""
}

type DappListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok   bool        `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Data []*DappInfo `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *DappListResp) Reset() {
	*x = DappListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DappListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DappListResp) ProtoMessage() {}

func (x *DappListResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DappListResp.ProtoReflect.Descriptor instead.
func (*DappListResp) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *DappListResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *DappListResp) GetData() []*DappInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type DappInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	Chain           string `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Uid             string `protobuf:"bytes,3,opt,name=uid,proto3" json:"uid,omitempty"`
	LastTxhash      string `protobuf:"bytes,4,opt,name=lastTxhash,proto3" json:"lastTxhash,omitempty"`
	Decimals        string `protobuf:"bytes,5,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Address         string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Token           string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	ToAddress       string `protobuf:"bytes,8,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	Amount          string `protobuf:"bytes,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Original        string `protobuf:"bytes,10,opt,name=original,proto3" json:"original,omitempty"`
	Symbol          string `protobuf:"bytes,11,opt,name=symbol,proto3" json:"symbol,omitempty"`
	DappInfo        string `protobuf:"bytes,12,opt,name=dappInfo,proto3" json:"dappInfo,omitempty"`
	Status          string `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	TxTime          int64  `protobuf:"varint,14,opt,name=txTime,proto3" json:"txTime,omitempty"`
}

func (x *DappInfo) Reset() {
	*x = DappInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DappInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DappInfo) ProtoMessage() {}

func (x *DappInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DappInfo.ProtoReflect.Descriptor instead.
func (*DappInfo) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *DappInfo) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *DappInfo) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *DappInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DappInfo) GetLastTxhash() string {
	if x != nil {
		return x.LastTxhash
	}
	return ""
}

func (x *DappInfo) GetDecimals() string {
	if x != nil {
		return x.Decimals
	}
	return ""
}

func (x *DappInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DappInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DappInfo) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *DappInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *DappInfo) GetOriginal() string {
	if x != nil {
		return x.Original
	}
	return ""
}

func (x *DappInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DappInfo) GetDappInfo() string {
	if x != nil {
		return x.DappInfo
	}
	return ""
}

func (x *DappInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DappInfo) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Code   uint64 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Mes    string `protobuf:"bytes,3,opt,name=mes,proto3" json:"mes,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *CreateResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CreateResponse) GetCode() uint64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateResponse) GetMes() string {
	if x != nil {
		return x.Mes
	}
	return ""
}

type TransactionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid                  string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`                          //-- 必输
	ChainName            string `protobuf:"bytes,2,opt,name=chainName,proto3" json:"chainName,omitempty"`              //-- 必输
	TransactionHash      string `protobuf:"bytes,3,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`  // -- 必输
	Status               string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                    // (status[success,fail,pending,refuse,no_status,cancel,invalid]) -- 必输
	FromAddress          string `protobuf:"bytes,5,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`          //  -- 必输
	ToAddress            string `protobuf:"bytes,6,opt,name=toAddress,proto3" json:"toAddress,omitempty"`              //  -- 必输
	Amount               string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`                    // -- 必输
	FeeAmount            string `protobuf:"bytes,8,opt,name=feeAmount,proto3" json:"feeAmount,omitempty"`              //  -- 非必输
	TransactionType      string `protobuf:"bytes,9,opt,name=transactionType,proto3" json:"transactionType,omitempty"`  //  -- 非必输
	ContractAddress      string `protobuf:"bytes,10,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"` //   -- 非必输
	TxTime               int64  `protobuf:"varint,11,opt,name=txTime,proto3" json:"txTime,omitempty"`                  // -- 非必输
	Nonce                int64  `protobuf:"varint,12,opt,name=nonce,proto3" json:"nonce,omitempty"`                    //  -- 非必输
	GasLimit             string `protobuf:"bytes,13,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`               //  -- 非必输
	GasUsed              string `protobuf:"bytes,14,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`                 // -- 非必输
	GasPrice             string `protobuf:"bytes,15,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`               //  -- 非必输
	BaseFee              string `protobuf:"bytes,16,opt,name=baseFee,proto3" json:"baseFee,omitempty"`                 // -- 非必输
	Data                 string `protobuf:"bytes,17,opt,name=data,proto3" json:"data,omitempty"`                       //  -- 非必输
	DappData             string `protobuf:"bytes,18,opt,name=dappData,proto3" json:"dappData,omitempty"`               //  -- 非必输
	EventLog             string `protobuf:"bytes,19,opt,name=eventLog,proto3" json:"eventLog,omitempty"`               //  -- 非必输
	ParseData            string `protobuf:"bytes,20,opt,name=parseData,proto3" json:"parseData,omitempty"`             //  -- 非必输
	NetUsage             string `protobuf:"bytes,21,opt,name=netUsage,proto3" json:"netUsage,omitempty"`               //  -- 非必输
	FeeLimit             string `protobuf:"bytes,22,opt,name=feeLimit,proto3" json:"feeLimit,omitempty"`               //  -- 非必输
	EnergyUsage          string `protobuf:"bytes,23,opt,name=energyUsage,proto3" json:"energyUsage,omitempty"`         //  -- 非必输
	BlockHash            string `protobuf:"bytes,24,opt,name=blockHash,proto3" json:"blockHash,omitempty"`             //-- 非必输
	BlockNumber          int64  `protobuf:"varint,25,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`        //  -- 非必输
	CreatedAt            int64  `protobuf:"varint,26,opt,name=createdAt,proto3" json:"createdAt,omitempty"`            // -- 非必输
	UpdatedAt            int64  `protobuf:"varint,27,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`            // -- 非必输
	ClientData           string `protobuf:"bytes,28,opt,name=clientData,proto3" json:"clientData,omitempty"`
	MaxFeePerGas         string `protobuf:"bytes,29,opt,name=maxFeePerGas,proto3" json:"maxFeePerGas,omitempty"`
	MaxPriorityFeePerGas string `protobuf:"bytes,30,opt,name=maxPriorityFeePerGas,proto3" json:"maxPriorityFeePerGas,omitempty"`
	FeeData              string `protobuf:"bytes,31,opt,name=feeData,proto3" json:"feeData,omitempty"`
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *TransactionReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *TransactionReq) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *TransactionReq) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *TransactionReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionReq) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *TransactionReq) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransactionReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionReq) GetFeeAmount() string {
	if x != nil {
		return x.FeeAmount
	}
	return ""
}

func (x *TransactionReq) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *TransactionReq) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TransactionReq) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *TransactionReq) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionReq) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *TransactionReq) GetGasUsed() string {
	if x != nil {
		return x.GasUsed
	}
	return ""
}

func (x *TransactionReq) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *TransactionReq) GetBaseFee() string {
	if x != nil {
		return x.BaseFee
	}
	return ""
}

func (x *TransactionReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TransactionReq) GetDappData() string {
	if x != nil {
		return x.DappData
	}
	return ""
}

func (x *TransactionReq) GetEventLog() string {
	if x != nil {
		return x.EventLog
	}
	return ""
}

func (x *TransactionReq) GetParseData() string {
	if x != nil {
		return x.ParseData
	}
	return ""
}

func (x *TransactionReq) GetNetUsage() string {
	if x != nil {
		return x.NetUsage
	}
	return ""
}

func (x *TransactionReq) GetFeeLimit() string {
	if x != nil {
		return x.FeeLimit
	}
	return ""
}

func (x *TransactionReq) GetEnergyUsage() string {
	if x != nil {
		return x.EnergyUsage
	}
	return ""
}

func (x *TransactionReq) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *TransactionReq) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *TransactionReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TransactionReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *TransactionReq) GetClientData() string {
	if x != nil {
		return x.ClientData
	}
	return ""
}

func (x *TransactionReq) GetMaxFeePerGas() string {
	if x != nil {
		return x.MaxFeePerGas
	}
	return ""
}

func (x *TransactionReq) GetMaxPriorityFeePerGas() string {
	if x != nil {
		return x.MaxPriorityFeePerGas
	}
	return ""
}

func (x *TransactionReq) GetFeeData() string {
	if x != nil {
		return x.FeeData
	}
	return ""
}

type PageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName                string   `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"` //-- 必输
	FromUid                  string   `protobuf:"bytes,2,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	ToUid                    string   `protobuf:"bytes,3,opt,name=toUid,proto3" json:"toUid,omitempty"`
	Uid                      string   `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	FromAddressList          []string `protobuf:"bytes,5,rep,name=fromAddressList,proto3" json:"fromAddressList,omitempty"`
	ToAddressList            []string `protobuf:"bytes,6,rep,name=toAddressList,proto3" json:"toAddressList,omitempty"`
	Address                  string   `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	ContractAddress          string   `protobuf:"bytes,8,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	StatusList               []string `protobuf:"bytes,9,rep,name=statusList,proto3" json:"statusList,omitempty"`
	StatusNotInList          []string `protobuf:"bytes,10,rep,name=statusNotInList,proto3" json:"statusNotInList,omitempty"`
	TransactionTypeList      []string `protobuf:"bytes,11,rep,name=transactionTypeList,proto3" json:"transactionTypeList,omitempty"`
	TransactionTypeNotInList []string `protobuf:"bytes,12,rep,name=transactionTypeNotInList,proto3" json:"transactionTypeNotInList,omitempty"`
	TransactionHashList      []string `protobuf:"bytes,13,rep,name=transactionHashList,proto3" json:"transactionHashList,omitempty"`
	StartTime                int64    `protobuf:"varint,14,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime                 int64    `protobuf:"varint,15,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	OrderBy                  string   `protobuf:"bytes,16,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	DataDirection            int32    `protobuf:"varint,17,opt,name=dataDirection,proto3" json:"dataDirection,omitempty"`
	StartIndex               int64    `protobuf:"varint,18,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	PageNum                  int32    `protobuf:"varint,19,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize                 int32    `protobuf:"varint,20,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total                    bool     `protobuf:"varint,21,opt,name=total,proto3" json:"total,omitempty"`
	Platform                 string   `protobuf:"bytes,22,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *PageListRequest) Reset() {
	*x = PageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageListRequest) ProtoMessage() {}

func (x *PageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageListRequest.ProtoReflect.Descriptor instead.
func (*PageListRequest) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *PageListRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *PageListRequest) GetFromUid() string {
	if x != nil {
		return x.FromUid
	}
	return ""
}

func (x *PageListRequest) GetToUid() string {
	if x != nil {
		return x.ToUid
	}
	return ""
}

func (x *PageListRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *PageListRequest) GetFromAddressList() []string {
	if x != nil {
		return x.FromAddressList
	}
	return nil
}

func (x *PageListRequest) GetToAddressList() []string {
	if x != nil {
		return x.ToAddressList
	}
	return nil
}

func (x *PageListRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PageListRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *PageListRequest) GetStatusList() []string {
	if x != nil {
		return x.StatusList
	}
	return nil
}

func (x *PageListRequest) GetStatusNotInList() []string {
	if x != nil {
		return x.StatusNotInList
	}
	return nil
}

func (x *PageListRequest) GetTransactionTypeList() []string {
	if x != nil {
		return x.TransactionTypeList
	}
	return nil
}

func (x *PageListRequest) GetTransactionTypeNotInList() []string {
	if x != nil {
		return x.TransactionTypeNotInList
	}
	return nil
}

func (x *PageListRequest) GetTransactionHashList() []string {
	if x != nil {
		return x.TransactionHashList
	}
	return nil
}

func (x *PageListRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PageListRequest) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *PageListRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *PageListRequest) GetDataDirection() int32 {
	if x != nil {
		return x.DataDirection
	}
	return 0
}

func (x *PageListRequest) GetStartIndex() int64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *PageListRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageListRequest) GetTotal() bool {
	if x != nil {
		return x.Total
	}
	return false
}

func (x *PageListRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type PageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*TransactionRecord `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PageListResponse) Reset() {
	*x = PageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageListResponse) ProtoMessage() {}

func (x *PageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageListResponse.ProtoReflect.Descriptor instead.
func (*PageListResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *PageListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageListResponse) GetList() []*TransactionRecord {
	if x != nil {
		return x.List
	}
	return nil
}

type TransactionRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChainName            string `protobuf:"bytes,2,opt,name=chainName,proto3" json:"chainName,omitempty"`
	BlockHash            string `protobuf:"bytes,3,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockNumber          int64  `protobuf:"varint,4,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	TransactionHash      string `protobuf:"bytes,5,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	FromAddress          string `protobuf:"bytes,6,opt,name=fromAddress,proto3" json:"fromAddress,omitempty"`
	ToAddress            string `protobuf:"bytes,7,opt,name=toAddress,proto3" json:"toAddress,omitempty"`
	FromUid              string `protobuf:"bytes,8,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	ToUid                string `protobuf:"bytes,9,opt,name=toUid,proto3" json:"toUid,omitempty"`
	Amount               string `protobuf:"bytes,10,opt,name=amount,proto3" json:"amount,omitempty"`
	FeeAmount            string `protobuf:"bytes,11,opt,name=feeAmount,proto3" json:"feeAmount,omitempty"`
	Status               string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	TransactionType      string `protobuf:"bytes,13,opt,name=transactionType,proto3" json:"transactionType,omitempty"`
	ContractAddress      string `protobuf:"bytes,14,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	TxTime               int64  `protobuf:"varint,15,opt,name=txTime,proto3" json:"txTime,omitempty"`
	Nonce                int64  `protobuf:"varint,16,opt,name=nonce,proto3" json:"nonce,omitempty"`
	GasLimit             string `protobuf:"bytes,17,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasUsed              string `protobuf:"bytes,18,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	GasPrice             string `protobuf:"bytes,19,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	BaseFee              string `protobuf:"bytes,20,opt,name=baseFee,proto3" json:"baseFee,omitempty"`
	MaxFeePerGas         string `protobuf:"bytes,21,opt,name=maxFeePerGas,proto3" json:"maxFeePerGas,omitempty"`
	MaxPriorityFeePerGas string `protobuf:"bytes,22,opt,name=maxPriorityFeePerGas,proto3" json:"maxPriorityFeePerGas,omitempty"`
	Data                 string `protobuf:"bytes,23,opt,name=data,proto3" json:"data,omitempty"`
	DappData             string `protobuf:"bytes,24,opt,name=dappData,proto3" json:"dappData,omitempty"`
	EventLog             string `protobuf:"bytes,25,opt,name=eventLog,proto3" json:"eventLog,omitempty"`
	ParseData            string `protobuf:"bytes,26,opt,name=parseData,proto3" json:"parseData,omitempty"`
	NetUsage             string `protobuf:"bytes,27,opt,name=netUsage,proto3" json:"netUsage,omitempty"`
	FeeLimit             string `protobuf:"bytes,28,opt,name=feeLimit,proto3" json:"feeLimit,omitempty"`
	EnergyUsage          string `protobuf:"bytes,29,opt,name=energyUsage,proto3" json:"energyUsage,omitempty"`
	CreatedAt            int64  `protobuf:"varint,30,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            int64  `protobuf:"varint,31,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	ClientData           string `protobuf:"bytes,32,opt,name=clientData,proto3" json:"clientData,omitempty"`
	FeeData              string `protobuf:"bytes,33,opt,name=feeData,proto3" json:"feeData,omitempty"`
	Cursor               int64  `protobuf:"varint,34,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *TransactionRecord) Reset() {
	*x = TransactionRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRecord) ProtoMessage() {}

func (x *TransactionRecord) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRecord.ProtoReflect.Descriptor instead.
func (*TransactionRecord) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *TransactionRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransactionRecord) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *TransactionRecord) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *TransactionRecord) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *TransactionRecord) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *TransactionRecord) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *TransactionRecord) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *TransactionRecord) GetFromUid() string {
	if x != nil {
		return x.FromUid
	}
	return ""
}

func (x *TransactionRecord) GetToUid() string {
	if x != nil {
		return x.ToUid
	}
	return ""
}

func (x *TransactionRecord) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionRecord) GetFeeAmount() string {
	if x != nil {
		return x.FeeAmount
	}
	return ""
}

func (x *TransactionRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionRecord) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *TransactionRecord) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *TransactionRecord) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *TransactionRecord) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TransactionRecord) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *TransactionRecord) GetGasUsed() string {
	if x != nil {
		return x.GasUsed
	}
	return ""
}

func (x *TransactionRecord) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *TransactionRecord) GetBaseFee() string {
	if x != nil {
		return x.BaseFee
	}
	return ""
}

func (x *TransactionRecord) GetMaxFeePerGas() string {
	if x != nil {
		return x.MaxFeePerGas
	}
	return ""
}

func (x *TransactionRecord) GetMaxPriorityFeePerGas() string {
	if x != nil {
		return x.MaxPriorityFeePerGas
	}
	return ""
}

func (x *TransactionRecord) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TransactionRecord) GetDappData() string {
	if x != nil {
		return x.DappData
	}
	return ""
}

func (x *TransactionRecord) GetEventLog() string {
	if x != nil {
		return x.EventLog
	}
	return ""
}

func (x *TransactionRecord) GetParseData() string {
	if x != nil {
		return x.ParseData
	}
	return ""
}

func (x *TransactionRecord) GetNetUsage() string {
	if x != nil {
		return x.NetUsage
	}
	return ""
}

func (x *TransactionRecord) GetFeeLimit() string {
	if x != nil {
		return x.FeeLimit
	}
	return ""
}

func (x *TransactionRecord) GetEnergyUsage() string {
	if x != nil {
		return x.EnergyUsage
	}
	return ""
}

func (x *TransactionRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TransactionRecord) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *TransactionRecord) GetClientData() string {
	if x != nil {
		return x.ClientData
	}
	return ""
}

func (x *TransactionRecord) GetFeeData() string {
	if x != nil {
		return x.FeeData
	}
	return ""
}

func (x *TransactionRecord) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type AmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName           string   `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"` //-- 必输
	FromUid             string   `protobuf:"bytes,2,opt,name=fromUid,proto3" json:"fromUid,omitempty"`
	ToUid               string   `protobuf:"bytes,3,opt,name=toUid,proto3" json:"toUid,omitempty"`
	FromAddressList     []string `protobuf:"bytes,4,rep,name=fromAddressList,proto3" json:"fromAddressList,omitempty"`
	ToAddressList       []string `protobuf:"bytes,5,rep,name=toAddressList,proto3" json:"toAddressList,omitempty"`
	TransactionTypeList []string `protobuf:"bytes,6,rep,name=transactionTypeList,proto3" json:"transactionTypeList,omitempty"`
}

func (x *AmountRequest) Reset() {
	*x = AmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmountRequest) ProtoMessage() {}

func (x *AmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmountRequest.ProtoReflect.Descriptor instead.
func (*AmountRequest) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *AmountRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *AmountRequest) GetFromUid() string {
	if x != nil {
		return x.FromUid
	}
	return ""
}

func (x *AmountRequest) GetToUid() string {
	if x != nil {
		return x.ToUid
	}
	return ""
}

func (x *AmountRequest) GetFromAddressList() []string {
	if x != nil {
		return x.FromAddressList
	}
	return nil
}

func (x *AmountRequest) GetToAddressList() []string {
	if x != nil {
		return x.ToAddressList
	}
	return nil
}

func (x *AmountRequest) GetTransactionTypeList() []string {
	if x != nil {
		return x.TransactionTypeList
	}
	return nil
}

type AmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *AmountResponse) Reset() {
	*x = AmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AmountResponse) ProtoMessage() {}

func (x *AmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AmountResponse.ProtoReflect.Descriptor instead.
func (*AmountResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *AmountResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type AssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName     string   `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"` //-- 非必输
	Uid           string   `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	AddressList   []string `protobuf:"bytes,3,rep,name=addressList,proto3" json:"addressList,omitempty"`
	Currency      string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"` //-- 币种: CNY:人民币, USD:美元
	OrderBy       string   `protobuf:"bytes,5,opt,name=orderBy,proto3" json:"orderBy,omitempty"`
	DataDirection int32    `protobuf:"varint,6,opt,name=dataDirection,proto3" json:"dataDirection,omitempty"`
	StartIndex    int64    `protobuf:"varint,7,opt,name=startIndex,proto3" json:"startIndex,omitempty"`
	PageNum       int32    `protobuf:"varint,8,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize      int32    `protobuf:"varint,9,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total         bool     `protobuf:"varint,10,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *AssetRequest) Reset() {
	*x = AssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetRequest) ProtoMessage() {}

func (x *AssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetRequest.ProtoReflect.Descriptor instead.
func (*AssetRequest) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *AssetRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *AssetRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AssetRequest) GetAddressList() []string {
	if x != nil {
		return x.AddressList
	}
	return nil
}

func (x *AssetRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AssetRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *AssetRequest) GetDataDirection() int32 {
	if x != nil {
		return x.DataDirection
	}
	return 0
}

func (x *AssetRequest) GetStartIndex() int64 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *AssetRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *AssetRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AssetRequest) GetTotal() bool {
	if x != nil {
		return x.Total
	}
	return false
}

type AssetPageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total               int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	TotalCurrencyAmount int64            `protobuf:"varint,2,opt,name=totalCurrencyAmount,proto3" json:"totalCurrencyAmount,omitempty"`
	List                []*AssetResponse `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *AssetPageListResponse) Reset() {
	*x = AssetPageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetPageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetPageListResponse) ProtoMessage() {}

func (x *AssetPageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetPageListResponse.ProtoReflect.Descriptor instead.
func (*AssetPageListResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{19}
}

func (x *AssetPageListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AssetPageListResponse) GetTotalCurrencyAmount() int64 {
	if x != nil {
		return x.TotalCurrencyAmount
	}
	return 0
}

func (x *AssetPageListResponse) GetList() []*AssetResponse {
	if x != nil {
		return x.List
	}
	return nil
}

type AssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName      string `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"`
	Uid            string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Address        string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	TokenAddress   string `protobuf:"bytes,4,opt,name=tokenAddress,proto3" json:"tokenAddress,omitempty"`
	Amount         string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Decimals       string `protobuf:"bytes,6,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Symbol         string `protobuf:"bytes,7,opt,name=symbol,proto3" json:"symbol,omitempty"`
	CurrencyAmount string `protobuf:"bytes,8,opt,name=currencyAmount,proto3" json:"currencyAmount,omitempty"`
}

func (x *AssetResponse) Reset() {
	*x = AssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetResponse) ProtoMessage() {}

func (x *AssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetResponse.ProtoReflect.Descriptor instead.
func (*AssetResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{20}
}

func (x *AssetResponse) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *AssetResponse) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *AssetResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AssetResponse) GetTokenAddress() string {
	if x != nil {
		return x.TokenAddress
	}
	return ""
}

func (x *AssetResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *AssetResponse) GetDecimals() string {
	if x != nil {
		return x.Decimals
	}
	return ""
}

func (x *AssetResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *AssetResponse) GetCurrencyAmount() string {
	if x != nil {
		return x.CurrencyAmount
	}
	return ""
}

type StatisticFundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName         string  `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"` //-- 非必输
	FundDirectionList []int32 `protobuf:"varint,2,rep,packed,name=fundDirectionList,proto3" json:"fundDirectionList,omitempty"`
	StartTime         int64   `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime          int64   `protobuf:"varint,4,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
}

func (x *StatisticFundRequest) Reset() {
	*x = StatisticFundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatisticFundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatisticFundRequest) ProtoMessage() {}

func (x *StatisticFundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatisticFundRequest.ProtoReflect.Descriptor instead.
func (*StatisticFundRequest) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{21}
}

func (x *StatisticFundRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *StatisticFundRequest) GetFundDirectionList() []int32 {
	if x != nil {
		return x.FundDirectionList
	}
	return nil
}

func (x *StatisticFundRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *StatisticFundRequest) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

type FundAmountListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FundAmountResponse `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FundAmountListResponse) Reset() {
	*x = FundAmountListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundAmountListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundAmountListResponse) ProtoMessage() {}

func (x *FundAmountListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundAmountListResponse.ProtoReflect.Descriptor instead.
func (*FundAmountListResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{22}
}

func (x *FundAmountListResponse) GetList() []*FundAmountResponse {
	if x != nil {
		return x.List
	}
	return nil
}

type FundAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FundDirection       int32  `protobuf:"varint,1,opt,name=fundDirection,proto3" json:"fundDirection,omitempty"`
	TransactionQuantity string `protobuf:"bytes,2,opt,name=transactionQuantity,proto3" json:"transactionQuantity,omitempty"`
	Amount              string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CnyAmount           string `protobuf:"bytes,4,opt,name=cnyAmount,proto3" json:"cnyAmount,omitempty"`
	UsdAmount           string `protobuf:"bytes,5,opt,name=usdAmount,proto3" json:"usdAmount,omitempty"`
	Dt                  int64  `protobuf:"varint,6,opt,name=dt,proto3" json:"dt,omitempty"`
}

func (x *FundAmountResponse) Reset() {
	*x = FundAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundAmountResponse) ProtoMessage() {}

func (x *FundAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundAmountResponse.ProtoReflect.Descriptor instead.
func (*FundAmountResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{23}
}

func (x *FundAmountResponse) GetFundDirection() int32 {
	if x != nil {
		return x.FundDirection
	}
	return 0
}

func (x *FundAmountResponse) GetTransactionQuantity() string {
	if x != nil {
		return x.TransactionQuantity
	}
	return ""
}

func (x *FundAmountResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *FundAmountResponse) GetCnyAmount() string {
	if x != nil {
		return x.CnyAmount
	}
	return ""
}

func (x *FundAmountResponse) GetUsdAmount() string {
	if x != nil {
		return x.UsdAmount
	}
	return ""
}

func (x *FundAmountResponse) GetDt() int64 {
	if x != nil {
		return x.Dt
	}
	return 0
}

type FundRateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FundRateResponse `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FundRateListResponse) Reset() {
	*x = FundRateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundRateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundRateListResponse) ProtoMessage() {}

func (x *FundRateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundRateListResponse.ProtoReflect.Descriptor instead.
func (*FundRateListResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{24}
}

func (x *FundRateListResponse) GetList() []*FundRateResponse {
	if x != nil {
		return x.List
	}
	return nil
}

type FundRateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FundDirection       int32  `protobuf:"varint,1,opt,name=fundDirection,proto3" json:"fundDirection,omitempty"`
	FundType            int32  `protobuf:"varint,2,opt,name=fundType,proto3" json:"fundType,omitempty"`
	TransactionQuantity string `protobuf:"bytes,3,opt,name=transactionQuantity,proto3" json:"transactionQuantity,omitempty"`
	Amount              string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CnyAmount           string `protobuf:"bytes,5,opt,name=cnyAmount,proto3" json:"cnyAmount,omitempty"`
	UsdAmount           string `protobuf:"bytes,6,opt,name=usdAmount,proto3" json:"usdAmount,omitempty"`
	Rate                string `protobuf:"bytes,7,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *FundRateResponse) Reset() {
	*x = FundRateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_transaction_v1_transaction_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FundRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundRateResponse) ProtoMessage() {}

func (x *FundRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_transaction_v1_transaction_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundRateResponse.ProtoReflect.Descriptor instead.
func (*FundRateResponse) Descriptor() ([]byte, []int) {
	return file_api_transaction_v1_transaction_proto_rawDescGZIP(), []int{25}
}

func (x *FundRateResponse) GetFundDirection() int32 {
	if x != nil {
		return x.FundDirection
	}
	return 0
}

func (x *FundRateResponse) GetFundType() int32 {
	if x != nil {
		return x.FundType
	}
	return 0
}

func (x *FundRateResponse) GetTransactionQuantity() string {
	if x != nil {
		return x.TransactionQuantity
	}
	return ""
}

func (x *FundRateResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *FundRateResponse) GetCnyAmount() string {
	if x != nil {
		return x.CnyAmount
	}
	return ""
}

func (x *FundRateResponse) GetUsdAmount() string {
	if x != nil {
		return x.UsdAmount
	}
	return ""
}

func (x *FundRateResponse) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

var File_api_transaction_v1_transaction_proto protoreflect.FileDescriptor

var file_api_transaction_v1_transaction_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x02, 0x0a, 0x0f, 0x44, 0x61, 0x70, 0x70, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d,
	0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12,
	0x31, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06, 0x30, 0x00, 0x30,
	0x01, 0x30, 0x02, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x58, 0x0a, 0x10, 0x44,
	0x61, 0x70, 0x70, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x70, 0x70, 0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x70, 0x70, 0x50, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x54, 0x0a, 0x08, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x09, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x57, 0x0a, 0x0d,
	0x4f, 0x70, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x36, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x69, 0x73, 0x6b, 0x45,
	0x78, 0x70, 0x6f, 0x73, 0x75, 0x72, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x69, 0x73, 0x6b, 0x45, 0x78, 0x70, 0x6f, 0x73, 0x75, 0x72,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x70, 0x70, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x70, 0x70,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x0b, 0x44, 0x61, 0x70, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x50, 0x0a, 0x0c, 0x44, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xfe, 0x02, 0x0a, 0x08, 0x44, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x78, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x78, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x78,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x65, 0x73, 0x22, 0xdc, 0x07, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x31, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46,
	0x65, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61,
	0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x47, 0x61, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xb4, 0x06, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x55, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f,
	0x74, 0x49, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30,
	0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x3a, 0x0a, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x18, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x49, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x12, 0x31, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08,
	0x1a, 0x06, 0x30, 0x00, 0x30, 0x01, 0x30, 0x02, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x28, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x21, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x63, 0x0a, 0x10, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x81, 0x08, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73,
	0x55, 0x73, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78,
	0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12, 0x32, 0x0a,
	0x14, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x47, 0x61, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6d, 0x61, 0x78,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x70, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x21, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x22, 0xe8, 0x01, 0x0a, 0x0d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x72, 0x6f, 0x6d, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x28,
	0x0a, 0x0e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xe1, 0x02, 0x0a, 0x0c, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xfa,
	0x42, 0x0c, 0x72, 0x0a, 0x52, 0x03, 0x43, 0x4e, 0x59, 0x52, 0x03, 0x55, 0x53, 0x44, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x79, 0x12, 0x31, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a, 0x06,
	0x30, 0x00, 0x30, 0x01, 0x30, 0x02, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x28, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21,
	0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x96, 0x01, 0x0a,
	0x15, 0x41, 0x73, 0x73, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x13,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xf1, 0x01, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x14, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x11, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x66, 0x75, 0x6e,
	0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x16, 0x46, 0x75,
	0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xd0, 0x01, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x66, 0x75, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a,
	0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6e, 0x79, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6e, 0x79, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x64, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x75,
	0x6e, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6e, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6e, 0x79, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x32, 0x9d, 0x07, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x61, 0x70, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x70, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x47, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x70, 0x70, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x70, 0x70, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0d, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6b, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x46, 0x75, 0x6e,
	0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a,
	0x11, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x52, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c, 0x0a, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x24,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2d, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_transaction_v1_transaction_proto_rawDescOnce sync.Once
	file_api_transaction_v1_transaction_proto_rawDescData = file_api_transaction_v1_transaction_proto_rawDesc
)

func file_api_transaction_v1_transaction_proto_rawDescGZIP() []byte {
	file_api_transaction_v1_transaction_proto_rawDescOnce.Do(func() {
		file_api_transaction_v1_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_transaction_v1_transaction_proto_rawDescData)
	})
	return file_api_transaction_v1_transaction_proto_rawDescData
}

var file_api_transaction_v1_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_api_transaction_v1_transaction_proto_goTypes = []interface{}{
	(*DappPageListReq)(nil),        // 0: api.transaction.v1.DappPageListReq
	(*DappPageListResp)(nil),       // 1: api.transaction.v1.DappPageListResp
	(*DappPageData)(nil),           // 2: api.transaction.v1.DappPageData
	(*NonceReq)(nil),               // 3: api.transaction.v1.NonceReq
	(*NonceResp)(nil),              // 4: api.transaction.v1.NonceResp
	(*OpenAmountReq)(nil),          // 5: api.transaction.v1.OpenAmountReq
	(*OpenAmoutResp)(nil),          // 6: api.transaction.v1.OpenAmoutResp
	(*OpenAmountInfo)(nil),         // 7: api.transaction.v1.OpenAmountInfo
	(*DappListReq)(nil),            // 8: api.transaction.v1.DappListReq
	(*DappListResp)(nil),           // 9: api.transaction.v1.DappListResp
	(*DappInfo)(nil),               // 10: api.transaction.v1.DappInfo
	(*CreateResponse)(nil),         // 11: api.transaction.v1.CreateResponse
	(*TransactionReq)(nil),         // 12: api.transaction.v1.TransactionReq
	(*PageListRequest)(nil),        // 13: api.transaction.v1.PageListRequest
	(*PageListResponse)(nil),       // 14: api.transaction.v1.PageListResponse
	(*TransactionRecord)(nil),      // 15: api.transaction.v1.TransactionRecord
	(*AmountRequest)(nil),          // 16: api.transaction.v1.AmountRequest
	(*AmountResponse)(nil),         // 17: api.transaction.v1.AmountResponse
	(*AssetRequest)(nil),           // 18: api.transaction.v1.AssetRequest
	(*AssetPageListResponse)(nil),  // 19: api.transaction.v1.AssetPageListResponse
	(*AssetResponse)(nil),          // 20: api.transaction.v1.AssetResponse
	(*StatisticFundRequest)(nil),   // 21: api.transaction.v1.StatisticFundRequest
	(*FundAmountListResponse)(nil), // 22: api.transaction.v1.FundAmountListResponse
	(*FundAmountResponse)(nil),     // 23: api.transaction.v1.FundAmountResponse
	(*FundRateListResponse)(nil),   // 24: api.transaction.v1.FundRateListResponse
	(*FundRateResponse)(nil),       // 25: api.transaction.v1.FundRateResponse
}
var file_api_transaction_v1_transaction_proto_depIdxs = []int32{
	2,  // 0: api.transaction.v1.DappPageListResp.data:type_name -> api.transaction.v1.DappPageData
	15, // 1: api.transaction.v1.DappPageData.data:type_name -> api.transaction.v1.TransactionRecord
	7,  // 2: api.transaction.v1.OpenAmoutResp.data:type_name -> api.transaction.v1.OpenAmountInfo
	10, // 3: api.transaction.v1.DappListResp.data:type_name -> api.transaction.v1.DappInfo
	15, // 4: api.transaction.v1.PageListResponse.list:type_name -> api.transaction.v1.TransactionRecord
	20, // 5: api.transaction.v1.AssetPageListResponse.list:type_name -> api.transaction.v1.AssetResponse
	23, // 6: api.transaction.v1.FundAmountListResponse.list:type_name -> api.transaction.v1.FundAmountResponse
	25, // 7: api.transaction.v1.FundRateListResponse.list:type_name -> api.transaction.v1.FundRateResponse
	12, // 8: api.transaction.v1.Transaction.CreateRecordFromWallet:input_type -> api.transaction.v1.TransactionReq
	13, // 9: api.transaction.v1.Transaction.PageList:input_type -> api.transaction.v1.PageListRequest
	16, // 10: api.transaction.v1.Transaction.GetAmount:input_type -> api.transaction.v1.AmountRequest
	8,  // 11: api.transaction.v1.Transaction.GetDappList:input_type -> api.transaction.v1.DappListReq
	5,  // 12: api.transaction.v1.Transaction.GetAllOpenAmount:input_type -> api.transaction.v1.OpenAmountReq
	3,  // 13: api.transaction.v1.Transaction.GetNonce:input_type -> api.transaction.v1.NonceReq
	0,  // 14: api.transaction.v1.Transaction.GetDappListPageList:input_type -> api.transaction.v1.DappPageListReq
	18, // 15: api.transaction.v1.Transaction.PageListAsset:input_type -> api.transaction.v1.AssetRequest
	21, // 16: api.transaction.v1.Transaction.StatisticFundAmount:input_type -> api.transaction.v1.StatisticFundRequest
	21, // 17: api.transaction.v1.Transaction.StatisticFundRate:input_type -> api.transaction.v1.StatisticFundRequest
	11, // 18: api.transaction.v1.Transaction.CreateRecordFromWallet:output_type -> api.transaction.v1.CreateResponse
	14, // 19: api.transaction.v1.Transaction.PageList:output_type -> api.transaction.v1.PageListResponse
	17, // 20: api.transaction.v1.Transaction.GetAmount:output_type -> api.transaction.v1.AmountResponse
	9,  // 21: api.transaction.v1.Transaction.GetDappList:output_type -> api.transaction.v1.DappListResp
	6,  // 22: api.transaction.v1.Transaction.GetAllOpenAmount:output_type -> api.transaction.v1.OpenAmoutResp
	4,  // 23: api.transaction.v1.Transaction.GetNonce:output_type -> api.transaction.v1.NonceResp
	1,  // 24: api.transaction.v1.Transaction.GetDappListPageList:output_type -> api.transaction.v1.DappPageListResp
	20, // 25: api.transaction.v1.Transaction.PageListAsset:output_type -> api.transaction.v1.AssetResponse
	22, // 26: api.transaction.v1.Transaction.StatisticFundAmount:output_type -> api.transaction.v1.FundAmountListResponse
	24, // 27: api.transaction.v1.Transaction.StatisticFundRate:output_type -> api.transaction.v1.FundRateListResponse
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_transaction_v1_transaction_proto_init() }
func file_api_transaction_v1_transaction_proto_init() {
	if File_api_transaction_v1_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_transaction_v1_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DappPageListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DappPageListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DappPageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAmountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAmoutResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenAmountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DappListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DappListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DappInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetPageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatisticFundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundAmountListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundRateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_transaction_v1_transaction_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FundRateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_transaction_v1_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_transaction_v1_transaction_proto_goTypes,
		DependencyIndexes: file_api_transaction_v1_transaction_proto_depIdxs,
		MessageInfos:      file_api_transaction_v1_transaction_proto_msgTypes,
	}.Build()
	File_api_transaction_v1_transaction_proto = out.File
	file_api_transaction_v1_transaction_proto_rawDesc = nil
	file_api_transaction_v1_transaction_proto_goTypes = nil
	file_api_transaction_v1_transaction_proto_depIdxs = nil
}
