// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: bfstation/v1/bfstation.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PageListTxnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName          string `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"`         // BenfenTEST or Benfen
	WalletAddress      string `protobuf:"bytes,2,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"` // mint, redeem,swap,add,remove,collect
	Type               string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	PageNum            int32  `protobuf:"varint,4,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize           int32  `protobuf:"varint,5,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	WalletAddressOrUid string `protobuf:"bytes,6,opt,name=walletAddressOrUid,proto3" json:"walletAddressOrUid,omitempty"`
	Status             string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"` // success,fail,pending
	StartTime          int64  `protobuf:"varint,8,opt,name=startTime,proto3" json:"startTime,omitempty"`
	StopTime           int64  `protobuf:"varint,9,opt,name=stopTime,proto3" json:"stopTime,omitempty"`
	FromOBWallet       bool   `protobuf:"varint,10,opt,name=fromOBWallet,proto3" json:"fromOBWallet,omitempty"`
	Source             string `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`           // station or mgt
	CoinTypeIn         string `protobuf:"bytes,12,opt,name=coinTypeIn,proto3" json:"coinTypeIn,omitempty"`   // coin_type_a if type is add or remove
	CoinTypeOut        string `protobuf:"bytes,13,opt,name=coinTypeOut,proto3" json:"coinTypeOut,omitempty"` // coin_type_b if type is add or remove
}

func (x *PageListTxnsRequest) Reset() {
	*x = PageListTxnsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageListTxnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageListTxnsRequest) ProtoMessage() {}

func (x *PageListTxnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageListTxnsRequest.ProtoReflect.Descriptor instead.
func (*PageListTxnsRequest) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{0}
}

func (x *PageListTxnsRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *PageListTxnsRequest) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *PageListTxnsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PageListTxnsRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageListTxnsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageListTxnsRequest) GetWalletAddressOrUid() string {
	if x != nil {
		return x.WalletAddressOrUid
	}
	return ""
}

func (x *PageListTxnsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PageListTxnsRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PageListTxnsRequest) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

func (x *PageListTxnsRequest) GetFromOBWallet() bool {
	if x != nil {
		return x.FromOBWallet
	}
	return false
}

func (x *PageListTxnsRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *PageListTxnsRequest) GetCoinTypeIn() string {
	if x != nil {
		return x.CoinTypeIn
	}
	return ""
}

func (x *PageListTxnsRequest) GetCoinTypeOut() string {
	if x != nil {
		return x.CoinTypeOut
	}
	return ""
}

type PageListTxnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*BFStationTxRecord `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PageListTxnsResponse) Reset() {
	*x = PageListTxnsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageListTxnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageListTxnsResponse) ProtoMessage() {}

func (x *PageListTxnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageListTxnsResponse.ProtoReflect.Descriptor instead.
func (*PageListTxnsResponse) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{1}
}

func (x *PageListTxnsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageListTxnsResponse) GetList() []*BFStationTxRecord {
	if x != nil {
		return x.List
	}
	return nil
}

type BFStationTxRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BlockHash       string `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	BlockNumber     int64  `protobuf:"varint,3,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	TxTime          int64  `protobuf:"varint,4,opt,name=txTime,proto3" json:"txTime,omitempty"`
	TransactionHash string `protobuf:"bytes,5,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	WalletAddress   string `protobuf:"bytes,6,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	Type            string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                      // mint, redeem,swap,add,remove
	PoolId          string `protobuf:"bytes,8,opt,name=poolId,proto3" json:"poolId,omitempty"`                  // non-empty if type is one of swap,add or remove
	Vault           string `protobuf:"bytes,9,opt,name=vault,proto3" json:"vault,omitempty"`                    // non-empty if type is one of mint or redeem
	TokenAmountIn   string `protobuf:"bytes,10,opt,name=tokenAmountIn,proto3" json:"tokenAmountIn,omitempty"`   // amount_a if type is add or remove
	TokenAmountOut  string `protobuf:"bytes,11,opt,name=tokenAmountOut,proto3" json:"tokenAmountOut,omitempty"` // amount_b if type is add or remove
	CoinTypeIn      string `protobuf:"bytes,12,opt,name=coinTypeIn,proto3" json:"coinTypeIn,omitempty"`         // coin_type_a if type is add or remove
	CoinTypeOut     string `protobuf:"bytes,13,opt,name=coinTypeOut,proto3" json:"coinTypeOut,omitempty"`       // coin_type_b if type is add or remove
	ParsedJson      string `protobuf:"bytes,14,opt,name=parsedJson,proto3" json:"parsedJson,omitempty"`
	Status          string `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"` // pending,success,fail
	CreatedAt       int64  `protobuf:"varint,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	WalletUid       string `protobuf:"bytes,17,opt,name=walletUid,proto3" json:"walletUid,omitempty"`
	FeeAmount       string `protobuf:"bytes,18,opt,name=feeAmount,proto3" json:"feeAmount,omitempty"`
	GasLimit        string `protobuf:"bytes,19,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasUsed         string `protobuf:"bytes,20,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	FromOBWallet    bool   `protobuf:"varint,21,opt,name=fromOBWallet,proto3" json:"fromOBWallet,omitempty"`
	CoinInfoIn      string `protobuf:"bytes,22,opt,name=coinInfoIn,proto3" json:"coinInfoIn,omitempty"`
	CoinInfoOut     string `protobuf:"bytes,23,opt,name=coinInfoOut,proto3" json:"coinInfoOut,omitempty"`
}

func (x *BFStationTxRecord) Reset() {
	*x = BFStationTxRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BFStationTxRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BFStationTxRecord) ProtoMessage() {}

func (x *BFStationTxRecord) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BFStationTxRecord.ProtoReflect.Descriptor instead.
func (*BFStationTxRecord) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{2}
}

func (x *BFStationTxRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BFStationTxRecord) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *BFStationTxRecord) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *BFStationTxRecord) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *BFStationTxRecord) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *BFStationTxRecord) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *BFStationTxRecord) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BFStationTxRecord) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *BFStationTxRecord) GetVault() string {
	if x != nil {
		return x.Vault
	}
	return ""
}

func (x *BFStationTxRecord) GetTokenAmountIn() string {
	if x != nil {
		return x.TokenAmountIn
	}
	return ""
}

func (x *BFStationTxRecord) GetTokenAmountOut() string {
	if x != nil {
		return x.TokenAmountOut
	}
	return ""
}

func (x *BFStationTxRecord) GetCoinTypeIn() string {
	if x != nil {
		return x.CoinTypeIn
	}
	return ""
}

func (x *BFStationTxRecord) GetCoinTypeOut() string {
	if x != nil {
		return x.CoinTypeOut
	}
	return ""
}

func (x *BFStationTxRecord) GetParsedJson() string {
	if x != nil {
		return x.ParsedJson
	}
	return ""
}

func (x *BFStationTxRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BFStationTxRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *BFStationTxRecord) GetWalletUid() string {
	if x != nil {
		return x.WalletUid
	}
	return ""
}

func (x *BFStationTxRecord) GetFeeAmount() string {
	if x != nil {
		return x.FeeAmount
	}
	return ""
}

func (x *BFStationTxRecord) GetGasLimit() string {
	if x != nil {
		return x.GasLimit
	}
	return ""
}

func (x *BFStationTxRecord) GetGasUsed() string {
	if x != nil {
		return x.GasUsed
	}
	return ""
}

func (x *BFStationTxRecord) GetFromOBWallet() bool {
	if x != nil {
		return x.FromOBWallet
	}
	return false
}

func (x *BFStationTxRecord) GetCoinInfoIn() string {
	if x != nil {
		return x.CoinInfoIn
	}
	return ""
}

func (x *BFStationTxRecord) GetCoinInfoOut() string {
	if x != nil {
		return x.CoinInfoOut
	}
	return ""
}

type PoolHolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName string `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"` // BenfenTEST or Benfen
	PoolId    string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
}

func (x *PoolHolderRequest) Reset() {
	*x = PoolHolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoolHolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoolHolderRequest) ProtoMessage() {}

func (x *PoolHolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoolHolderRequest.ProtoReflect.Descriptor instead.
func (*PoolHolderRequest) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{3}
}

func (x *PoolHolderRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *PoolHolderRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

type TokenHolderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName string `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"` // BenfenTEST or Benfen
	CoinType  string `protobuf:"bytes,2,opt,name=coinType,proto3" json:"coinType,omitempty"`
}

func (x *TokenHolderRequest) Reset() {
	*x = TokenHolderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenHolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenHolderRequest) ProtoMessage() {}

func (x *TokenHolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenHolderRequest.ProtoReflect.Descriptor instead.
func (*TokenHolderRequest) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{4}
}

func (x *TokenHolderRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *TokenHolderRequest) GetCoinType() string {
	if x != nil {
		return x.CoinType
	}
	return ""
}

type CountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountResponse) Reset() {
	*x = CountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResponse) ProtoMessage() {}

func (x *CountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResponse.ProtoReflect.Descriptor instead.
func (*CountResponse) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{5}
}

func (x *CountResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PageListFeesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainName string `protobuf:"bytes,1,opt,name=chainName,proto3" json:"chainName,omitempty"` // BenfenTEST or Benfen
	PoolId    string `protobuf:"bytes,2,opt,name=poolId,proto3" json:"poolId,omitempty"`
	PageNum   int32  `protobuf:"varint,3,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize  int32  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	StartTime int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"` // txTime starts at
	StopTime  int64  `protobuf:"varint,6,opt,name=stopTime,proto3" json:"stopTime,omitempty"`   // txTime stops at
}

func (x *PageListFeesRequest) Reset() {
	*x = PageListFeesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageListFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageListFeesRequest) ProtoMessage() {}

func (x *PageListFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageListFeesRequest.ProtoReflect.Descriptor instead.
func (*PageListFeesRequest) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{6}
}

func (x *PageListFeesRequest) GetChainName() string {
	if x != nil {
		return x.ChainName
	}
	return ""
}

func (x *PageListFeesRequest) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *PageListFeesRequest) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *PageListFeesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageListFeesRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *PageListFeesRequest) GetStopTime() int64 {
	if x != nil {
		return x.StopTime
	}
	return 0
}

type PageListFeesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*BFStationCollectFeeRecord `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PageListFeesResponse) Reset() {
	*x = PageListFeesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageListFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageListFeesResponse) ProtoMessage() {}

func (x *PageListFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageListFeesResponse.ProtoReflect.Descriptor instead.
func (*PageListFeesResponse) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{7}
}

func (x *PageListFeesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageListFeesResponse) GetList() []*BFStationCollectFeeRecord {
	if x != nil {
		return x.List
	}
	return nil
}

type BFStationCollectFeeRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TransactionHash string `protobuf:"bytes,2,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	TxTime          int64  `protobuf:"varint,3,opt,name=txTime,proto3" json:"txTime,omitempty"`
	WalletAddress   string `protobuf:"bytes,4,opt,name=walletAddress,proto3" json:"walletAddress,omitempty"`
	PoolId          string `protobuf:"bytes,5,opt,name=poolId,proto3" json:"poolId,omitempty"`
	PositionId      string `protobuf:"bytes,6,opt,name=positionId,proto3" json:"positionId,omitempty"`
	AmountA         string `protobuf:"bytes,7,opt,name=amountA,proto3" json:"amountA,omitempty"`
	AmountB         string `protobuf:"bytes,8,opt,name=amountB,proto3" json:"amountB,omitempty"`
	CoinTypeA       string `protobuf:"bytes,9,opt,name=coinTypeA,proto3" json:"coinTypeA,omitempty"`
	CoinTypeB       string `protobuf:"bytes,10,opt,name=coinTypeB,proto3" json:"coinTypeB,omitempty"`
	CreatedAt       int64  `protobuf:"varint,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
}

func (x *BFStationCollectFeeRecord) Reset() {
	*x = BFStationCollectFeeRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bfstation_v1_bfstation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BFStationCollectFeeRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BFStationCollectFeeRecord) ProtoMessage() {}

func (x *BFStationCollectFeeRecord) ProtoReflect() protoreflect.Message {
	mi := &file_bfstation_v1_bfstation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BFStationCollectFeeRecord.ProtoReflect.Descriptor instead.
func (*BFStationCollectFeeRecord) Descriptor() ([]byte, []int) {
	return file_bfstation_v1_bfstation_proto_rawDescGZIP(), []int{8}
}

func (x *BFStationCollectFeeRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BFStationCollectFeeRecord) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetTxTime() int64 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *BFStationCollectFeeRecord) GetWalletAddress() string {
	if x != nil {
		return x.WalletAddress
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetPositionId() string {
	if x != nil {
		return x.PositionId
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetAmountA() string {
	if x != nil {
		return x.AmountA
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetAmountB() string {
	if x != nil {
		return x.AmountB
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetCoinTypeA() string {
	if x != nil {
		return x.CoinTypeA
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetCoinTypeB() string {
	if x != nil {
		return x.CoinTypeB
	}
	return ""
}

func (x *BFStationCollectFeeRecord) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

var File_bfstation_v1_bfstation_proto protoreflect.FileDescriptor

var file_bfstation_v1_bfstation_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x03, 0x0a, 0x13, 0x50, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28, 0x00,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x55, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x74, 0x6f,
	0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x28, 0x00, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4f, 0x42, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4f, 0x42, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x75, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x75, 0x74, 0x22, 0x65, 0x0a, 0x14,
	0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x46, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x78, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0xcb, 0x05, 0x0a, 0x11, 0x42, 0x46, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x78, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x75, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x4f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x4a, 0x73, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x4a,
	0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x55, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x4f, 0x42, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4f, 0x42, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x75, 0x74, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x4f, 0x75,
	0x74, 0x22, 0x5b, 0x0a, 0x11, 0x50, 0x6f, 0x6f, 0x6c, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0x60,
	0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x63,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x25, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf1, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28,
	0x00, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x28, 0x00, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x25, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28,
	0x00, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x14, 0x50,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x46, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd9, 0x02, 0x0a, 0x19, 0x42,
	0x46, 0x53, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x86, 0x03, 0x0a, 0x09, 0x42, 0x46, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0c, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x78, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x78, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x10, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c,
	0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x48,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x50, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x46, 0x65, 0x65, 0x73,
	0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x65, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x38, 0x0a, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x22, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2d, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x66, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_bfstation_v1_bfstation_proto_rawDescOnce sync.Once
	file_bfstation_v1_bfstation_proto_rawDescData = file_bfstation_v1_bfstation_proto_rawDesc
)

func file_bfstation_v1_bfstation_proto_rawDescGZIP() []byte {
	file_bfstation_v1_bfstation_proto_rawDescOnce.Do(func() {
		file_bfstation_v1_bfstation_proto_rawDescData = protoimpl.X.CompressGZIP(file_bfstation_v1_bfstation_proto_rawDescData)
	})
	return file_bfstation_v1_bfstation_proto_rawDescData
}

var file_bfstation_v1_bfstation_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_bfstation_v1_bfstation_proto_goTypes = []interface{}{
	(*PageListTxnsRequest)(nil),       // 0: api.bfstation.v1.PageListTxnsRequest
	(*PageListTxnsResponse)(nil),      // 1: api.bfstation.v1.PageListTxnsResponse
	(*BFStationTxRecord)(nil),         // 2: api.bfstation.v1.BFStationTxRecord
	(*PoolHolderRequest)(nil),         // 3: api.bfstation.v1.PoolHolderRequest
	(*TokenHolderRequest)(nil),        // 4: api.bfstation.v1.TokenHolderRequest
	(*CountResponse)(nil),             // 5: api.bfstation.v1.CountResponse
	(*PageListFeesRequest)(nil),       // 6: api.bfstation.v1.PageListFeesRequest
	(*PageListFeesResponse)(nil),      // 7: api.bfstation.v1.PageListFeesResponse
	(*BFStationCollectFeeRecord)(nil), // 8: api.bfstation.v1.BFStationCollectFeeRecord
}
var file_bfstation_v1_bfstation_proto_depIdxs = []int32{
	2, // 0: api.bfstation.v1.PageListTxnsResponse.list:type_name -> api.bfstation.v1.BFStationTxRecord
	8, // 1: api.bfstation.v1.PageListFeesResponse.list:type_name -> api.bfstation.v1.BFStationCollectFeeRecord
	0, // 2: api.bfstation.v1.BFStation.PageListTxns:input_type -> api.bfstation.v1.PageListTxnsRequest
	3, // 3: api.bfstation.v1.BFStation.CountPoolHolders:input_type -> api.bfstation.v1.PoolHolderRequest
	4, // 4: api.bfstation.v1.BFStation.CountTokenHolders:input_type -> api.bfstation.v1.TokenHolderRequest
	6, // 5: api.bfstation.v1.BFStation.PageListCollectFees:input_type -> api.bfstation.v1.PageListFeesRequest
	1, // 6: api.bfstation.v1.BFStation.PageListTxns:output_type -> api.bfstation.v1.PageListTxnsResponse
	5, // 7: api.bfstation.v1.BFStation.CountPoolHolders:output_type -> api.bfstation.v1.CountResponse
	5, // 8: api.bfstation.v1.BFStation.CountTokenHolders:output_type -> api.bfstation.v1.CountResponse
	7, // 9: api.bfstation.v1.BFStation.PageListCollectFees:output_type -> api.bfstation.v1.PageListFeesResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_bfstation_v1_bfstation_proto_init() }
func file_bfstation_v1_bfstation_proto_init() {
	if File_bfstation_v1_bfstation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bfstation_v1_bfstation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageListTxnsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageListTxnsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BFStationTxRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoolHolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenHolderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageListFeesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageListFeesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bfstation_v1_bfstation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BFStationCollectFeeRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bfstation_v1_bfstation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bfstation_v1_bfstation_proto_goTypes,
		DependencyIndexes: file_bfstation_v1_bfstation_proto_depIdxs,
		MessageInfos:      file_bfstation_v1_bfstation_proto_msgTypes,
	}.Build()
	File_bfstation_v1_bfstation_proto = out.File
	file_bfstation_v1_bfstation_proto_rawDesc = nil
	file_bfstation_v1_bfstation_proto_goTypes = nil
	file_bfstation_v1_bfstation_proto_depIdxs = nil
}
